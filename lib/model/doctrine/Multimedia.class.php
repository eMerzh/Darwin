<?php

/**
 * Multimedia
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Multimedia extends BaseMultimedia
{
  private static $allowed_mime_type = array(
    'txt' => 'text/plain',
//   'htm' => 'text/html',
    'html' => 'text/html',
//    'php' => 'text/html',
    'css' => 'text/css',
//    'js' => 'application/javascript',
//    'json' => 'application/json',
    'xml' => 'application/xml',
//    'swf' => 'application/x-shockwave-flash',
//    'flv' => 'video/x-flv',

    // images
    'png' => 'image/png',
//    'jpe' => 'image/jpeg',
//    'jpeg' => 'image/jpeg',
    'jpg' => 'image/jpeg',
    'gif' => 'image/gif',
    'bmp' => 'image/bmp',
    'ico' => 'image/vnd.microsoft.icon',
//    'tiff' => 'image/tiff',
    'tif' => 'image/tiff',
    'svg' => 'image/svg+xml',
    'ogg' => 'application/ogg',
//    'svgz' => 'image/svg+xml',

    // archives
    'zip' => 'application/zip',
    'rar' => 'application/x-rar-compressed',
//    'exe' => 'application/x-msdownload',
//    'msi' => 'application/x-msdownload',
//    'cab' => 'application/vnd.ms-cab-compressed',
    // audio
    'wav' => 'audio/x-wav',
    'mp3' => 'audio/mpeg',    
    'wma' => 'audio/x-ms-wma',
    'rla' => 'audio/vnd.rn-realaudio',
    // video
//    'qt' => 'video/quicktime',
    'mov' => 'video/quicktime',
    'mp4' => 'video/mp4',
    'mpeg' => 'video/mpeg',

    // adobe
    'pdf' => 'application/pdf',
    'psd' => 'image/vnd.adobe.photoshop',
    'ai' => 'application/postscript',
    'eps' => 'application/postscript',
    'ps' => 'application/postscript',

    // ms office
    'doc' => 'application/msword',
    'rtf' => 'application/rtf',
    'xls' => 'application/vnd.ms-excel',
    'ppt' => 'application/vnd.ms-powerpoint',

    // open office
    'odt' => 'application/vnd.oasis.opendocument.text',
    'ods' => 'application/vnd.oasis.opendocument.spreadsheet',
        );
        
  public function deleteObjectAndFile()
  {
    unlink(sfConfig::get('sf_upload_dir')."/multimedia/".$this->_get('uri'));
    $this->delete() ;
  }
  
  public function getCreationDateMasked()
  {
    $dateTime = new FuzzyDateTime($this->_get('creation_date'), $this->_get('creation_date_mask'),false,false);
    return $dateTime->getDateMasked();
  }

  public function getCreationDate()
  {
    $date = new FuzzyDateTime($this->_get('creation_date'),$this->_get('creation_date_mask'),false, false);
    return $date->getDateTime(null, 'Y/m/d', null);
  } 
  
  public function changeUri()
  {
    $path = $this->checkUploadPathAvailable() ;     
    rename(sfConfig::get('sf_upload_dir')."/multimedia/temp/".$this->_get('uri'),
                      sfConfig::get('sf_upload_dir')."/multimedia/".$path.'/'.$this->_get('uri'));                    
    $this->setUri($path.'/'.$this->_get('uri')) ;
  }   

  protected function checkUploadPathAvailable()
  {
    //function used to verify if the folder for the uploaded file exists
    $path = sfConfig::get('sf_upload_dir')."/multimedia/".date("Y/m/d") ;
    if(!is_dir($path)) mkdir($path,0750,true) ;
    return (date("Y/m/d")) ;    
  }  
  
  public static function CheckMimeType($mime_type)
  {
    return(in_array($mime_type,self::$allowed_mime_type)?true:false);
  }

  public function getFullURI()
  {
    return sfConfig::get('sf_upload_dir').'/multimedia/'.$this->getUri();
  }

}
