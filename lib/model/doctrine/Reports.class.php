<?php

/**
 * Reports
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    darwin
 * @subpackage model
 * @author     DB team <darwin-ict@naturalsciences.be>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Reports extends BaseReports
{

  private static $reports = array(
      'annual_stat_collection' => array(
        'name_fr' => 'Statistiques annuelles par collections',
        'name_nl' => 'Jaarlijkse statistieken collecties',
        'name_en' => 'Annual statistic by collections',
        'format' => array('xls'=>'xls','pdf'=>'pdf'),
        'widgets' => array('collection_ref','date_from','date_to'),
        'fast' => false,
      )
    );
  static public function getGlobalReports(){

    return self::$reports;
  }

  static public function getReportName($name,$lang)
  {
    return self::$reports[$name]['name_'.$lang] ;
  }
  
  static public function getRequiredFieldForReport($name)
  {
    if(!$name) return array() ;
    return self::$reports[$name]['widgets'] ;
  }

  static public function getFormatFor($name)
  {
    if(!$name) return array() ;
    return self::$reports[$name]['format'] ;
  }
  static public function getIsFast($name)
  {
    if(!$name) return array() ;
    return self::$reports[$name]['fast'] ;
  }
  public function setParameters($data)
  {
    $param = '' ;
    $widget = self::getRequiredFieldForReport($data['name']) ;
    foreach($widget as $field)
    {
      if($field == 'date_from' OR $field == 'date_to')
      {
        $dateTime = new FuzzyDateTime($data[$field], 56, true); 
        $param .= '"'.$field.'"=>"'.$dateTime->format('Y-m-d').'",' ;
      }
      else
        $param .= '"'.$field.'"=>"'.$data[$field].'",' ;
    }
    $this->_set('parameters',$param) ;
  }

  public function getParameters()
  {
    $hstore = new Hstore() ;
    $hstore->import($this->_get('parameters')) ;
    return $hstore ;
  }

  public function getUrlReport()
  {
    $url = sfConfig::get('dw_report_server')."/rest_v2/reports/darwin/".$this->getName()."_".$this->getLang().".".$this->getFormat();
    $variables = $this->getParameters() ;
    if(! empty($variables) ) $url .= '?'.http_build_query($variables);
    return $url ;
  }
}
