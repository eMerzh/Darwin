<?php

/**
 * ImportsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ImportsTable extends Doctrine_Table
{
  /**
    * Returns an instance of this class.
    *
    * @return object ImportsTable
    */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('Imports');
  }

  public function markOk($id)
  {
    $conn = Doctrine_Manager::connection();
    $prepared_sql = $conn->prepare("UPDATE staging s1
                                    SET to_import = TRUE
                                    WHERE status = ''
                                      AND import_ref = ?"
    );
    $prepared_sql->execute(array(intval($id)));
    $q = Doctrine_Query::create()->update('Imports');
    $q->andwhere('id = ? ',$id)
      ->set('state', '?','processing')
      ->execute();
  }

  public function getNumberOfLines($record_ids)
  {
    if(! count($record_ids)) return array();
    $conn = Doctrine_Manager::connection();
    $sql = "SELECT import_ref as id, COUNT(*) as cnt
            FROM staging r
            WHERE import_ref IN (?)
            GROUP BY import_ref";
    $ids_list_as_string = implode(',',$record_ids);
    $result = $conn->fetchAssoc($sql, array($ids_list_as_string));
    return $result;
  }

  public function clearImport($id)
  {

    $q = Doctrine_Query::create()->Delete('staging s')
      ->andwhere('import_ref = ? ',$id)
      ->execute();
    $q = Doctrine_Query::create()->update('Imports')
      ->andwhere('id = ? ',$id)
      ->set('state', '?','aborted')
      ->set('is_finished', '?',true)
      ->execute();
  }

  public function getWithImports($id)
  {    
    $q = Doctrine_Query::create()
      ->From('Imports i')
      ->andwhere('exists(select 1 from staging where to_import = true and import_ref = i.id)')
      ->andWhere("state = 'aprocessing'");
    if(!empty($id) && ctype_digit($id) && $id > 0) {
      $q->andWhere("i.id = ?", $id);
    }

    return $q->execute();
  }


  // function used by check import task to flag the state of checked line to avoid twice check
  public function tagProcessing($state, $id)
  {
    $q =  Doctrine_Query::create()->from('Imports i') ;
    if($state == 'taxon')
    {
      $q->andwhere('i.format = \'taxon\'')
        ->andWhere("state = ?",'loaded');
    }
    else
    {
      $q->andwhere('i.format = \'abcd\'')
        ->andWhereIn("state",$state);
    }

    // If specific id is passed, restrict the retrieval of imports and set of imports state to the selected one
    if(!empty($id) && ctype_digit($id) && $id > 0) {
      $q->andWhere("i.id = ?", $id);
    }

    $items = $q->execute();

    $ids = $items->toKeyValueArray("id", "id");

    if(count($ids))
    {
      $ids_list_as_string = implode(',', $ids);
      $conn = Doctrine_Manager::connection();
      $prepared_sql = $conn->prepare("UPDATE Imports
                                       SET state = CASE
                                                    WHEN state='loaded' THEN 'aloaded'
                                                    WHEN state='processing' THEN 'aprocessing'
                                                    ELSE 'apending'
                                                   END
                                       WHERE id in (?)"
      );
      $prepared_sql->execute(array($ids_list_as_string));
    }

    // Return the items object retrieved
    return $items;
  }
  
  public function updateStatus($id)
  {
    $q = Doctrine_Query::create() 
      ->update('Imports i')
      ->set('state', '?','loaded')
      ->update('Imports i')
      ->andwhere('id = ? ',$id)
      ->execute() ;
  }
}
